<?php declare(strict_types=1);

/* Copyright (c) 2024 - Daniel Weise <daniel.weise@concepts-and-training.de> - Extended GPL, see LICENSE */

function log_write(string $output = "") : void {
    $date = new DateTimeImmutable("now", new DateTimeZone("Europe/Berlin"));
    file_put_contents(
        "/var/log/doil/instance-update.log",
        "\n" . $date->format('Y-m-d H:i:s') . " :: " . $output,
        FILE_APPEND
    );
}
/*
$request_headers = apache_request_headers();
if (is_null($request_headers) || !array_key_exists("Authorization", $request_headers)) {
    log_write("No request headers found. Authorization required");
    http_response_code(401);
    throw new Exception("Authorization required");
}
$request_token = $request_headers["Authorization"];

$environment_token = getenv("UPDATE_TOKEN");
if (is_null($environment_token)) {
    log_write("No environment token found. Authorization required");
    http_response_code(401);
    throw new Exception("Authorization required");
}

if ($environment_token !== $request_token) {
    log_write("No token match. Authorization required");
    http_response_code(401);
    throw new Exception("Authorization required");
}


$branch = exec("git branch --show-current");
if (is_null($_GET) || !array_key_exists("base_ref", $_GET)) {
    log_write("Missing get params");
    http_response_code(500);
    throw new Exception("Failed to run update hook");
}
 */

$branch = exec("git branch --show-current");
if ($branch === "master") {
    // reset language files
    exec("git checkout lang/");

    // Pull current checked out branch from origin
    $pull_output = [];
    $result_code = 0;
    $branch = exec("git branch --show-current");
    log_write("Pull current checked out branch from origin\n");
    $pull_output = system("git pull origin " . $branch . " 2>&1 | tee -a /var/log/doil/instance-update.log", $result_code);
    if ($result_code !== 0) {
        log_write("Error running 'git pull origin " . $branch . "'");
        http_response_code(500);
        throw new Exception("Failed to run update hook");
    }
    if (strstr($pull_output, "Already up to date.")) {
        log_write("Already up to date.");
        http_response_code(200);
        exit();
    }

    // Run language script
    log_write("Run language script\n");
    system("./CI/tools/build-dev-custom-lang.sh >> /var/log/doil/instance-update.log 2>&1", $result_code);
    if ($result_code !== 0) {
        log_write("Error running 'build-dev-custom-lang.sh'");
        http_response_code(500);
        throw new Exception("Failed to run update hook");
    }

    // Run composer install
    $result_code = 0;
    log_write("Run composer install\n");
    system("COMPOSER_HOME=/usr/local/bin/composer composer install >> /var/log/doil/instance-update.log 2>&1", $result_code);
    if ($result_code !== 0) {
        log_write("Error running 'composer install " . $branch);
        http_response_code(500);
        throw new Exception("Failed to run update hook");
    }

    // Run ilias update
    $result_code = 0;
    log_write("Run ilias update\n");
    system("php setup/setup.php update -y >> /var/log/doil/instance-update.log 2>&1", $result_code);

    if ($result_code !== 0) {
        log_write("Error running 'php setup/setup.php update -y " . $branch);
        http_response_code(500);
        throw new Exception("Failed to run update hook");
    }
}
